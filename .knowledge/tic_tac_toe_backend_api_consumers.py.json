{"is_source_file": true, "format": "Python", "description": "This file defines a WebSocket consumer class `GameConsumer` for real-time multiplayer game updates, likely for a tic-tac-toe game. It manages WebSocket connections, group communication, and message broadcasting for game state updates within a Django Channels setup.", "external_files": ["json", "channels.generic.websocket", "django.contrib.auth", "django.contrib.auth.get_user_model"], "external_methods": ["channels.generic.websocket.AsyncWebsocketConsumer.accept", "channels.generic.websocket.AsyncWebsocketConsumer.disconnect", "channels.generic.websocket.AsyncWebsocketConsumer.receive", "channels.generic.websocket.AsyncWebsocketConsumer.send", "channels.generic.websocket.AsyncWebsocketConsumer.group_add", "channels.generic.websocket.AsyncWebsocketConsumer.group_discard", "django.contrib.auth.get_user_model"], "published": ["GameConsumer"], "classes": [{"name": "GameConsumer", "description": "A WebSocket consumer class for handling real-time game updates via Django Channels, managing group communication for each game room."}], "methods": [{"name": "connect(self)", "description": "Handles new WebSocket connections; adds the connection to a game-specific group and accepts the connection.", "scope": "GameConsumer", "scopeKind": "class"}, {"name": "disconnect(self, close_code)", "description": "Handles WebSocket disconnections; removes the connection from the game group.", "scope": "GameConsumer", "scopeKind": "class"}, {"name": "receive(self, text_data)", "description": "Handles messages received from the WebSocket client; currently a placeholder, as move handling is done server-side.", "scope": "GameConsumer", "scopeKind": "class"}, {"name": "game_update(self, event)", "description": "Receives server-initiated events to send game state updates back to clients.", "scope": "GameConsumer", "scopeKind": "class"}], "calls": ["self.channel_layer.group_add", "self.channel_layer.group_discard", "self.accept", "self.send", "json.dumps"], "search-terms": ["WebSocket consumer", "Django Channels", "game_update", "game_id", "group communication", "tic-tac-toe", "async def connect", "AsyncWebsocketConsumer"], "state": 2, "file_id": 20, "knowledge_revision": 48, "git_revision": "694d9c1d0e65a8dd93776f1f8874747fd1e67527", "revision_history": [{"41": ""}, {"48": "694d9c1d0e65a8dd93776f1f8874747fd1e67527"}], "ctags": [{"_type": "tag", "name": "GameConsumer", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-game-platform-142434-142443/tic_tac_toe_backend/api/consumers.py", "pattern": "/^class GameConsumer(AsyncWebsocketConsumer):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "User", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-game-platform-142434-142443/tic_tac_toe_backend/api/consumers.py", "pattern": "/^User = get_user_model()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "connect", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-game-platform-142434-142443/tic_tac_toe_backend/api/consumers.py", "pattern": "/^    async def connect(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "GameConsumer", "scopeKind": "class"}, {"_type": "tag", "name": "disconnect", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-game-platform-142434-142443/tic_tac_toe_backend/api/consumers.py", "pattern": "/^    async def disconnect(self, close_code):$/", "language": "Python", "kind": "member", "signature": "(self, close_code)", "scope": "GameConsumer", "scopeKind": "class"}, {"_type": "tag", "name": "game_update", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-game-platform-142434-142443/tic_tac_toe_backend/api/consumers.py", "pattern": "/^    async def game_update(self, event):$/", "language": "Python", "kind": "member", "signature": "(self, event)", "scope": "GameConsumer", "scopeKind": "class"}, {"_type": "tag", "name": "receive", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-game-platform-142434-142443/tic_tac_toe_backend/api/consumers.py", "pattern": "/^    async def receive(self, text_data):$/", "language": "Python", "kind": "member", "signature": "(self, text_data)", "scope": "GameConsumer", "scopeKind": "class"}], "hash": "060cc5d512b0c40ab4fa678af8cb4c07", "format-version": 4, "code-base-name": "tic_tac_toe_backend", "filename": "tic_tac_toe_backend/api/consumers.py", "fields": [{"name": "User = get_user_model()", "scope": "", "scopeKind": "", "description": "unavailable"}]}